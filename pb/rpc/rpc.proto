syntax = "proto3";

package proto.rpc;

service Poc {
  // Sends a greeting
  rpc AddPeer (RPCAddPeerReq) returns (RPCReply) {}
  rpc SubscribeShard(RPCSubscribeShardReq) returns (RPCReply) {}
  rpc UnsubscribeShard(RPCUnsubscribeShardReq) returns (RPCReply) {}
  rpc GetSubscribedShard(RPCGetSubscribedShardReq) returns (RPCGetSubscribedShardReply) {}
  rpc BroadcastCollation(RPCBroadcastCollationReq) returns (RPCReply) {}
  rpc StopServer(RPCStopServerReq) returns (RPCReply) {}
}

// AddPeer
message RPCAddPeerReq {
  string ip = 1;
  int64 port = 2;
  int64 seed = 3;
}

// SubscribeShard
message RPCSubscribeShardReq {
  repeated int64 shardIDs = 1;
}
// UnsubscribeShard
message RPCUnsubscribeShardReq {
  repeated int64 shardIDs = 1;
}
// GetSubscribedShard
message RPCGetSubscribedShardReq {
}
message RPCGetSubscribedShardReply {
  repeated int64 shardIDs = 1;
  bool status = 2;
}
// BroadcastCollation
message RPCBroadcastCollationReq {
  int64 shardID = 1;
  int64 number = 2;
  int64 size = 3;
  int64 period = 4;
}
// RequestCollation
message RPCRequestCollationReq {
  int64 shardID = 1;
  int64 period = 4;
}
// StopServer
message RPCStopServerReq {
}


message RPCReply {
  string message = 1;
  bool status = 2;
}
